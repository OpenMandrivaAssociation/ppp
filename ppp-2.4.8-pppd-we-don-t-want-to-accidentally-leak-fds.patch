diff -up ppp-ppp-2.5.0/pppd/auth.c.3~ ppp-ppp-2.5.0/pppd/auth.c
--- ppp-ppp-2.5.0/pppd/auth.c.3~	2023-03-18 09:11:05.000000000 +0000
+++ ppp-ppp-2.5.0/pppd/auth.c	2024-07-14 00:38:35.262605663 +0100
@@ -518,7 +518,7 @@ setupapfile(char **argv)
         free(fname);
 	return 0;
     }
-    ufile = fopen(fname, "r");
+    ufile = fopen(fname, "re");
     if (seteuid(euid) == -1)
 	fatal("unable to regain privileges: %m");
     if (ufile == NULL) {
@@ -1535,7 +1535,7 @@ check_passwd(int unit,
     filename = PPP_PATH_UPAPFILE;
     addrs = opts = NULL;
     ret = UPAP_AUTHNAK;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL) {
 	error("Can't open PAP password file %s: %m", filename);
 
@@ -1635,7 +1635,7 @@ null_login(int unit)
     if (ret <= 0) {
 	filename = PPP_PATH_UPAPFILE;
 	addrs = NULL;
-	f = fopen(filename, "r");
+	f = fopen(filename, "re");
 	if (f == NULL)
 	    return 0;
 	check_access(f, filename);
@@ -1681,7 +1681,7 @@ get_pap_passwd(char *passwd)
     }
 
     filename = PPP_PATH_UPAPFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 	return 0;
     check_access(f, filename);
@@ -1718,7 +1718,7 @@ have_pap_secret(int *lacks_ipp)
     }
 
     filename = PPP_PATH_UPAPFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 	return 0;
 
@@ -1760,7 +1760,7 @@ have_chap_secret(char *client, char *ser
     }
 
     filename = PPP_PATH_CHAPFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 	return 0;
 
@@ -1798,7 +1798,7 @@ have_srp_secret(char *client, char *serv
     struct wordlist *addrs;
 
     filename = PPP_PATH_SRPFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 	return 0;
 
@@ -1849,7 +1849,7 @@ get_secret(int unit, char *client, char
 	addrs = NULL;
 	secbuf[0] = 0;
 
-	f = fopen(filename, "r");
+	f = fopen(filename, "re");
 	if (f == NULL) {
 	    error("Can't open chap secret file %s: %m", filename);
 	    return 0;
@@ -1902,7 +1902,7 @@ get_srp_secret(int unit, char *client, c
 	filename = PPP_PATH_SRPFILE;
 	addrs = NULL;
 
-	fp = fopen(filename, "r");
+	fp = fopen(filename, "re");
 	if (fp == NULL) {
 	    error("Can't open srp secret file %s: %m", filename);
 	    return 0;
@@ -2291,7 +2291,7 @@ scan_authfile(FILE *f, char *client, cha
 	     */
 	    if (word[0] == '@' && word[1] == '/') {
 		strlcpy(atfile, word+1, sizeof(atfile));
-		if ((sf = fopen(atfile, "r")) == NULL) {
+		if ((sf = fopen(atfile, "re")) == NULL) {
 		    warn("can't open indirect secret file %s", atfile);
 		    continue;
 		}
@@ -2461,7 +2461,7 @@ have_eaptls_secret_server(char *client,
     char pkfile[MAXWORDLEN];
 
     filename = PPP_PATH_EAPTLSSERVFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 		return 0;
 
@@ -2518,7 +2518,7 @@ have_eaptls_secret_client(char *client,
 		return 1;
 
     filename = PPP_PATH_EAPTLSCLIFILE;
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     if (f == NULL)
 		return 0;
 
@@ -2738,7 +2738,7 @@ get_eaptls_secret(int unit, char *client
 		filename = (am_server ? PPP_PATH_EAPTLSSERVFILE : PPP_PATH_EAPTLSCLIFILE);
 		addrs = NULL;
 
-		fp = fopen(filename, "r");
+		fp = fopen(filename, "re");
 		if (fp == NULL)
 		{
 			error("Can't open eap-tls secret file %s: %m", filename);
diff -up ppp-ppp-2.5.0/pppd/options.c.3~ ppp-ppp-2.5.0/pppd/options.c
--- ppp-ppp-2.5.0/pppd/options.c.3~	2024-07-14 00:35:20.182498282 +0100
+++ ppp-ppp-2.5.0/pppd/options.c	2024-07-14 00:38:53.562620454 +0100
@@ -555,7 +555,7 @@ ppp_options_from_file(char *filename, in
 	ppp_option_error("unable to drop privileges to open %s: %m", filename);
 	return 0;
     }
-    f = fopen(filename, "r");
+    f = fopen(filename, "re");
     err = errno;
     if (check_prot && seteuid(euid) == -1)
 	fatal("unable to regain privileges");
diff -up ppp-ppp-2.5.0/pppd/sys-linux.c.3~ ppp-ppp-2.5.0/pppd/sys-linux.c
--- ppp-ppp-2.5.0/pppd/sys-linux.c.3~	2023-03-18 09:11:05.000000000 +0000
+++ ppp-ppp-2.5.0/pppd/sys-linux.c	2024-07-14 00:35:20.182498282 +0100
@@ -1978,7 +1978,7 @@ static char *path_to_procfs(const char *
 	/* Default the mount location of /proc */
 	strlcpy (proc_path, "/proc", sizeof(proc_path));
 	proc_path_len = 5;
-	fp = fopen(MOUNTED, "r");
+	fp = fopen(MOUNTED, "re");
 	if (fp != NULL) {
 	    while ((mntent = getmntent(fp)) != NULL) {
 		if (strcmp(mntent->mnt_type, MNTTYPE_IGNORE) == 0)
@@ -2038,7 +2038,7 @@ static int open_route_table (void)
     close_route_table();
 
     path = path_to_procfs("/net/route");
-    route_fd = fopen (path, "r");
+    route_fd = fopen (path, "re");
     if (route_fd == NULL) {
 	error("can't open routing table %s: %m", path);
 	return 0;
